The documents the restore procedure for the web server. It is a mashup of
intall/apache-php.txt, install/mysql.txt with a dose of a Bitvise restoration.

The virtual machine is a Ubuntu 20 VM provided by IONOS (a.k.a. 1&1). The
webserver uses a LAMP stack with Apache, PHP and MySQL. The webserver also uses
Mediawiki software from the Mediawiki Foundation (and not the distro).

The process is detailed as follows. The process takes about 20 minutes since
it is mostly copy and paste.

* provision a VM
* create users and accounts
* install system software
* restore to /tmp/restore
* restore Iptables config
* restore OpenSSH config
* restore Home directories
* restore Web server config
* restore Web data files
* restore SQL server config
* restore SQL database
* update Mediawiki
* repair Mediawiki
* setup backup jobs

Provision a VM
==============

If the VM is being reprovisioned then log into the IONOS console. JW should
have provided you credentials to his IONOS account.

Go to "My IONOS". Go to "Servers & Cloud". Highlight the Crypto++ webserver.
Select Reinstall.

Create user accounts
====================

Manually recreate the user accounts. This ensures the home directories are
present before they are restored.

  adduser weidai
  ...
  usermod -a -G sudo weidai
  usermod -a -G staff weidai

  adduser jwalton
  ...
  usermod -a -G sudo jwalton
  usermod -a -G staff jwalton

  adduser ...

Install system software
=======================

  apt-get install apache2 apache2-bin apache2-data apache2-utils \
    libapache2-mod-security2

  apt-get install php7.4 php7.4-cli php7.4-common php7.4-gd php7.4-intl \
    php7.4-json php7.4-mbstring php7.4-mysql php7.4-opcache php7.4-readline \
    php7.4-xml php7.4-zip

  apt-get install mysql-client-8.0 mysql-client-core-8.0 mysql-common \
    mysql-server-8.0 mysql-server-core-8.0

  apt-get install duplicity

  # Other tools needed on occasion
  apt-get install net-tools certbot git unzip

If OWASP CRS rules are installed, then remove them:

  # apt-get remove modsecurity-crs

Restore to /tmp/restore
=======================

Run Duplicity with the following command. <password>, <host>, and <port>
are available in in cryptopp.conf. cryptopp.conf if a file that you should have
a local encrypted copy. <remote_dir> is hard-coded in the backup script.

  duplicity restore --file-to-restore "/" "sftp://CryptoPPBackup:<password>@<host>:<port>/<remote_dir>" "/tmp/restore"

After the command completes the restored filesystem is available at
/tmp/restore.

Note well: /tmp is cleaned upon reboot, so get what you need before you bounce
the server.

Restore Iptables
================

  cp -p etc/iptables/* /etc/iptables/

  systemctl restart iptables

Restore OpenSSH config
======================

Restore server keys

  cd /tmp/restore
  cp -p etc/ssh/ssh_host_*_key* /etc/ssh/

Restore policies

  cp -p etc/ssh/sshd_config.d/* /etc/ssh/sshd_config.d/

Restart OpenSSH service

  systemctl enable sshd
  systemctl start sshd

Restore Home directories
========================

  cd /tmp/restore

  cp -p -r root/* /root/
  chown -R root:root /root/*

  cp -p -r home/weidai/* /home/weidai/
  chown -R weidai:weidai /home/weidai/*

  cp -p -r home/jwalton/* /home/jwalton/
  chown -R jwalton:jwalton /home/jwalton/*

  chmod -R o= /home/*

Restore Web server config
=========================

Enable mod_ssl, mod_rewrite and mod_security

  a2enmod ssl
  a2enmod rewrite
  a2enmod security2

Copy relevant files.

  cd /tmp/restore

  cp -p etc/php/7.4/apache2/php.ini /etc/php/7.4/apache2/
  cp -p etc/php/7.4/apache2/conf.d/99-security.* /etc/php/7.4/apache2/conf.d/
  cp -p etc/apache2/apache2.conf /etc/apache2/
  cp -p etc/apache2/mods-available/ssl.conf /etc/apache2/mods-available/
  cp -p etc/apache2/sites-available/cryptopp.conf /etc/apache2/sites-available
  cp -p etc/modsecurity/modsecurity.conf /etc/modsecurity
  cp -p etc/ssl/private/cryptopp-com.* /etc/ssl/private/

Test the configuration

  apachectl configtest

Restore Web data files
=======================

  cd /tmp/restore

  cp -p -r var/www/html/* /var/www/html/
  cp -p var/www/html/.htaccess /var/www/html/

  chown -R root:www-data /var/www
  chmod -R o= /var/www

Apache Permissions
==================

Ownership of /var/html is root:www-data. Other has no access.

  chown -R root:www-data /var/www-data
  chmod -R o= /var/html

PHP has an upload directory at /var/lib/php/session. Apache needs write access.

  chown -R www-data:www-data /var/lib/php
  chmod -R o= /var/lib/php

Test the configuration

  apachectl configtest

Secure database
===============

After MySQl is installed run mysql_secure_installation. Set the password to the
system password. It is 32-characters and starts with "cB".

  # mysql_secure_installation

Remove anonymous users, Disallow remote root login and Remove test databases.

If needed, adjust the password policy manually.

  # mysql -u root -p
  <enter password>

  SHOW VARIABLES LIKE 'validate_password%';

  SET GLOBAL validate_password.policy=STRONG;
  SET GLOBAL validate_password.length=16;
  SET GLOBAL validate_password.mixed_case_count=0;
  SET GLOBAL validate_password.number_count=0;
  SET GLOBAL validate_password.special_char_count=0;

Restore SQL server config
=========================

Log into MySQL server with the system password. The system password is
32-characters and starts with "cB".

  # mysql -u root -p
  <enter password>

Create the Mediawiki database.

  mysql> CREATE DATABASE my_wiki;
  Query OK, 1 row affected (0.01 sec)

Create the Mediawiki user. The password is the wiki user password. It is
32-characters and starts with "fe".

  mysql> CREATE USER 'mwuser'@'localhost' IDENTIFIED BY '<password>';
  Query OK, 0 rows affected (0.01 sec)

Grant the media wiki user all privileges on the database.

  mysql> GRANT ALL PRIVILEGES ON my_wiki.* TO 'mwuser'@'localhost';
  Query OK, 0 rows affected (0.01 sec)

  mysql> FLUSH PRIVILEGES;

Restore SQL database
====================

Log into MySQL server with the system password. The system password is
32-characters and starts with "cB".

  mysql -u root -p
  <enter password>

Switch to the wiki database.

  mysql> USE my_wiki;

Perform the restore using the SQL dump.

  mysql> source /tmp/restore/backup/wiki.sql;
  ...
  Query OK, 830 rows affected (0.02 sec)
  Records: 830  Duplicates: 0  Warnings: 0
  Query OK, 0 rows affected (0.01 sec)
  Query OK, 0 rows affected (0.00 sec)

  mysql>

Once restored exit MySQL.

  mysql> exit
  Bye

MySQL Permissions
=================

MySQL permissions are OK.

Repair Mediawiki
================

Run the Mediawiki maintenance script. This will repair any problems that may
have crept into the database. This is usually performed after Mediawiki
components are added or removed.

  cd /var/www/html/w/maintenance
  php update.php --quick --server="https://www.cryptopp.com/wiki"

Update Mediawiki
================

Run our update-wiki.sh script. The script will set ownership and permissions,
and perform other miscellaneous items.

  cd /var/www/html/w
  bash update-wiki.sh

Setup backup jobs
=================

The final step is to setup Systemd backup jobs. This is very important.

First, restore the conf file with passwords and shared secrets.

  cd /tmp/restore
  cp -p etc/cryptopp.conf /etc/
  chown root:root /etc/cryptopp.conf
  chmod u=r,go= /etc/cryptopp.conf

Second, update and install the backup scripts.

  cd /root/backup-scripts
  ./update.sh
  ./install.sh

Once the backup jobs are setup verify them.

  # systemctl status bitvise-backup.timer
  ● bitvise-backup.timer - Run bitvise-backup.service once a day
       Loaded: loaded (/etc/systemd/system/bitvise-backup.timer; enabled; vendor >
       Active: active (waiting) since Wed 2021-03-31 19:42:14 UTC; 30min ago
      Trigger: Thu 2021-04-01 05:13:12 UTC; 9h left
     Triggers: ● bitvise-backup.service
         Docs: https://github.com/weidai11/website/systemd

  # systemctl status bitvise-backup.service
  ● bitvise-backup.service - Run bitvise-backup.service once a day
       Loaded: loaded (/etc/systemd/system/bitvise-backup.service; static; vendor>
       Active: inactive (dead)
  TriggeredBy: ● bitvise-backup.timer
         Docs: https://github.com/weidai11/website/systemd

Test the website and wiki
=========================

Navigate to https://www.github.com. Press F5 to get a fresh copy of the page.

Click on the Mediawiki link at the top of the page. Press F5 to get a fresh
copy of the page.

Navigate to https://www.cryptopp.com/wiki/Special:Version. Ensure everything
looks ok.
