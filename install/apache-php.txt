This document details the Crypto++ webserver's configuration for Apache and PHP.
The virtual machine is a Ubuntu 20 VM provided by IONOS (a.k.a. 1&1). The webserver
uses a LAMP stack with Apache, PHP and MySQL. The webserver also uses Mediawiki
software from the Mediawiki Foundation (and not the distro).

The following instructions install Apache and PHP and detail some of the
important settings for the webserver. After installing Apache and PHP we need
to install Mediawiki from sources using a Long Term Release version of the
Mediawiki software.

MySQL setup is available in install/mysql.txt.

Install Apache and PHP packages
===============================

  # apt-get install apache2 apache2-bin apache2-data apache2-utils \
    libapache2-mod-security2

  # apt-get install php7.4 php7.4-cli php7.4-common php7.4-gd php7.4-intl \
    php7.4-json php7.4-mbstring php7.4-mysql php7.4-opcache php7.4-readline \
    php7.4-xml php7.4-zip

  # apt-get install mysql-client-8.0 mysql-client-core-8.0 mysql-common \
    mysql-server-8.0 mysql-server-core-8.0

  # Other tools needed on occasion
  # apt-get install net-tools certbot git unzip

Once installed the new gear is located in /bin, /etc and friends.

  $ ls /etc | grep -E 'apache|php|mysql'
  apache2
  mysql
  php

security.ini
============

Crypto++ uses a hardened PHP configuration. Open /etc/php/7.4/apache2/php.ini,
and add the following to the tail:

  # tail -n 5 /etc/php/7.4/apache2/php.ini
  ;; Security hardening in security.ini
  log_errors = On
  display_errors = Off
  log_errors_max_len = 1024
  error_reporting = E_ALL & ~E_DEPRECATED & ~E_STRICT
  error_log = /var/log/apache2/error.log

Copy security.ini to /etc/php/7.4/apache2/conf.d/99-security.ini. Be sure to
rename it to 99-security.ini. The 99- ensures security.ini runs last to override
previous settings.

  $ find /etc -name 99-security.ini
  /etc/php/7.4/apache2/conf.d/99-security.ini

apache2.conf
============

Open /etc/apache2/apache2.conf and verify logging settings:

  ErrorLog ${APACHE_LOG_DIR}/error.log
  TransferLog ${APACHE_LOG_DIR}/access.log
  LogLevel warn

Ensure the following settings are set or add them if missing:

  ServerSignature Off
  ServerTokens Prod

Add the following if serving pages results in "Forbidden" (access denied):

  <Directory /var/www/html>
      Options Indexes FollowSymLinks
      # AllowOverride None
      AllowOverride FileInfo
      Require all granted
  </Directory>

MPM model
=========

Ensure prefork is used. We tried to cutover to mpm_event_module, but it
is incompatible with other components.

  # ls /etc/apache2/mods-enabled | grep prefork
  mpm_prefork.conf
  mpm_prefork.load

Enable mods
===========

Enable mod_ssl and mod_rewrite

  a2enmod ssl
  a2enmod rewrite
  a2enmod security2

Inspect /etc/apache2/mods-enabled, and ensure there are no unneeded modules.
In particular, http2_module is not compatible with the mpm prefork module:

  # ls /etc/apache2/mods-enabled | grep http2
  #

mod_security
============

Find modsecurity.conf and verify SecRuleEngine is On:

  # SecRuleEngine DetectionOnly
  SecRuleEngine On

ssl.conf
========

Find ssl.conf and verify the SSL/TLS VirtualHost settings:

  # find /etc/apache2 -name ssl.conf
  /etc/apache2/mods-enabled/ssl.conf
  /etc/apache2/mods-available/ssl.conf

And:

  $ cat /etc/apache2/mods-enabled/ssl.conf
  ...

  DocumentRoot "/var/www/html"
  ServerName www.cryptopp.com:443
  ServerAlias *.cryptopp.com cryptopp.com

  SSLProtocol -all +TLSv1 +TLSv1.1 +TLSv1.2 +TLSv1.3
  SSLCipherSuite HIGH:!aNULL:!kRSA:!MD5:!RC4

  SSLCertificateFile /etc/ssl/private/cryptopp-com.cert.pem
  SSLCertificateChainFile /etc/ssl/private/cryptopp-com.chain.pem
  SSLCertificateKeyFile /etc/ssl/private/cryptopp-com.key.pem

  ErrorLog /var/log/apache2/error.log
  TransferLog /var/log/apache2/access.log
  LogLevel warn

.htaccess
=========

Ensure there is a Short URL rule for Mediawiki. This translates
requests with wiki/ in the URL to w/ on the filesystem. Also see
https://www.mediawiki.org/wiki/Manual:Short_URL

  $ cat /var/www/html/.htaccess

  RewriteEngine on
  RewriteRule ^wiki/?(.*)$ /w/index.php?title=$1 [L,QSA]

  <IfModule mod_deflate.c>
    <FilesMatch "\.(js|css|html)$">
      SetOutputFilter DEFLATE
    </FilesMatch>
  </IfModule>

Apache Service
==============

Enable and start the Apache service via Systemd

  systemctl enable apache2
  systemctl start apache2

Reboot the machine, and verify Apache is running:

  # systemctl status apache2
  ‚óè apache2.service - The Apache HTTP Server
     Loaded: loaded (/lib/systemd/system/apache2.service; enabled; vendor preset: enabled)
     Active: active (running) since Tue 2021-03-30 22:10:35 UTC; 2h 22min ago
     ...

Miscellaneous
=============

Finally, install Mediawiki software. Mediawiki installation is covered in
mediawiki/wiki-upgrade.txt.
